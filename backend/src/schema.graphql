# import * from './generated/prisma.graphql'
type SuccessMessage {
  message: String
}

type Mutation {
  signUp(email: String!, password: String!, firstName: String!, lastName: String!): User!
  login(email: String!, password: String!): User!
  logout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  submitElection(election: ElectionInput!): Election
}

type Query {
  myself: User
  users: [User]!
  electionCandidates(roles: [Role]!, accountStatus: AccountStatus!): [User]!
  getActiveElections: [Election]!
  getElection(id: ID!): Election!
}

type User {
  id: ID!
  joined: DateTime
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  avatarSmall: String
  role: Role!
  permissions: [Permission]!
  # memberType: MemberType!
  vehicle: Vehicle
}

input ElectionInput {
  electionName: String!
  startTime: String!
  endTime: String!
  races: [BallotInput!]!
}

input BallotInput {
  title: String!
  desc: String
  candidates: [UserInput!]!
  # votes: [Vote] @relation(name: "BallotVote")
}

input UserInput {
  id: ID!
}

# input VoteInput {
#   ballot: Ballot!
#   dateTime: DateTime
#   candidate: User @relation(name: "VotesRecdUser")
#   voter: User! @relation(name: "VotedUser")
# }
