enum Role {
  ADMIN
  OFFICER
  RUN_MASTER
  RUN_LEADER
  USER
}

enum AccountStatus {
  ACTIVE
  PAST_DUE
  DELINQUENT
  REMOVED
  RESIGNED
  INACTIVE
  LIMITED
  LOCKED
}

enum AccountType {
  FULL
  ASSOCIATE
  EMERITUS
  GUEST
}

enum Office {
  PRESIDENT
  VICE_PRESIDENT
  SECRETARY
  TREASURER
}

enum Title {
  WEBMASTER
  RUN_MASTER
  RUN_LEADER
  EMERITUS_MEMBER
  CHARTER_MEMBER
}

enum Poll {
  ELECTION
  RUN_SELECTION
}

enum TrailDifficulty {
  UNKNOWN
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum MigrationStatus {
  NEEDED
  IN_PROGRESS
  COMPLETED
}

enum RSVPStatus {
  NONE
  CANT_GO
  GOING
  MAYBE
}

enum TrailCondition {
  CLEAR
  MINOR_ISSUES
  MAJOR_ISSUES
  CLOSED
}

scalar DateTime

type User {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  joined: DateTime
  firstName: String!
  lastName: String!
  username: String! @unique
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  avatarSmall: String
  isCharterMember: Boolean @default(value: false)
  vehicle: Vehicle
  titles: [Title] @scalarList(strategy:RELATION)
  role: Role! @default(value: USER)
  accountStatus: AccountStatus! @default(value: LOCKED)
  accountType: AccountType! @default(value: GUEST)
  office: Office @unique
  candidateFor: [Ballot]! @relation(name: "CandidateUser")
  votesReceived: [Vote]! @relation(name: "VotesRecdUser")
  votedFor: [Vote]! @relation(name: "VotedUser")
  comfortLevel: String
  log: [LogItem] @relation(name: "LogMember")
  membershipLog: [MembershipLogItem] @relation(name: "LogItemMember")
  membershipLogContributions: [MembershipLogItem] @relation(name: "LogItemInitiator")
  eventsCreated: [Event] @relation(name: "EventCreator")
  eventsRSVPd: [RSVP] @relation(name: "UserRSVP")
  eventsHosted: [Event] @relation(name: "EventHost")
  trailsVisited: [Trail] @relation(name: "TrailVisitor")
  bandaids: [Bandaid] @relation(name: "BandaidSubject")
  runReportsLogged: [RunReport]! @relation(name: "RunReporter")
  #trailsFavorited: [Trail]
}

type Event {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  title: String!
  creator: User! @relation(name: "EventCreator")
  description: String
  startTime: DateTime
  endTime: DateTime
  host: User @relation(name: "EventHost")
  rsvps: [RSVP] @relation(name: "EventRSVP")
  address: String
  trailDifficulty: TrailDifficulty
  trailNotes: String
  rallyAddress: String
  rallyTime: DateTime
  trail: Trail @relation(name: "EventTrail")
  bandaids: [Bandaid] @relation(name: "EventBandaid")
  runReports: [RunReport] @relation(name: "EventRunReport")
  membersOnly: Boolean
  
}

type RSVP {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  member: User! @relation(name: "UserRSVP")
  event: Event! @relation(name: "EventRSVP")
  status: RSVPStatus! @default(value: NONE)
}

type Trail {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  slug: String!
  name: String
  description: String
  trailheadCoords: String
  address: String
  avgDifficulty: TrailDifficulty #computed
  avgRatings: Float #computed
  currentConditions: String #computed
  conditionsLastReported: DateTime #computed
  favoriteCount: Int #computed
  pastEvents: [Event] @relation(name: "EventTrail")
  visitors: [User] @relation(name: "TrailVisitor")
  runReports: [RunReport] @relation(name: "TrailRunReport")
}

type RunReport {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  startTime: DateTime!
  endTime: DateTime!
  reportFiled: DateTime!
  reporter: User! @relation(name: "RunReporter")
  title: String!
  description: String
  trail: Trail! @relation(name: "TrailRunReport")
  event: Event @relation(name: "EventRunReport")
  weather: String!
  difficulty: TrailDifficulty!
  rating: Float!
  condition: Condition @relation(link: TABLE, name: "RunCondition")
  favorite: Boolean
}

type Condition {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  report: RunReport! @relation(name: "RunCondition")
  status: TrailCondition!
  notes: String
}

type Bandaid {
  id: ID! @unique @id
  createdAt: DateTime @createdAt
  updatedAt: DateTime! @updatedAt
  event: Event @relation(name: "EventBandaid")
  memberInvolved: User @relation(name: "BandaidSubject")
  title: String
  description: String
}

type Election {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  electionName: String!
  startTime: DateTime
  endTime: DateTime
  races: [Ballot!]!
}

type Ballot {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  title: String!
  desc: String
  candidates: [User!]! @relation(name: "CandidateUser")
  votes: [Vote] @relation(name: "BallotVote")
}

type Vote {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  ballot: Ballot! @relation(name: "BallotVote")
  candidate: User @relation(name: "VotesRecdUser")
  voter: User! @relation(name: "VotedUser")
}

type Vehicle {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  year: Int!
  make: String!
  model: String!
  name: String
  trim: String
  image: String
  mods: [String] @scalarList(strategy:RELATION)
}

type LogItem {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  message: String!
  user: User! @relation(name: "LogMember")
  event: Event
}

type MembershipLogItem {
  id: ID! @unique @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  startTime: DateTime!
  endTime: DateTime
  message: String!
  user: User! @relation(name: "LogItemMember")
  initiator: User! @relation(name: "LogItemInitiator")
}
